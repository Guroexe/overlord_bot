import os
import json
from pathlib import Path
from typing import Dict

from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InputFile,
)
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
    MessageHandler,
    filters,
)
from flask import Flask, request
from telegram import Bot

# ------------------------------
# 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
# ------------------------------
# –¢–æ–∫–µ–Ω –±–µ—Ä—ë—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN
TELEGRAM_TOKEN = os.environ.get("7972832759:AAEwXCLf7bXdYguvmx4cJvPCfnfWmslXVW8")
# –í–Ω–µ—à–Ω–∏–π URL –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ Render (–Ω–∞–ø—Ä–∏–º–µ—Ä, https://your-app.onrender.com)
RENDER_EXTERNAL_URL = os.environ.get("RENDER_EXTERNAL_URL")

if not TELEGRAM_TOKEN or not RENDER_EXTERNAL_URL:
    raise RuntimeError("–ù–µ –∑–∞–¥–∞–Ω TELEGRAM_TOKEN –∏–ª–∏ RENDER_EXTERNAL_URL")  # :contentReference[oaicite:7]{index=7}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Flask –¥–ª—è –ø—Ä–∏—ë–º–∞ webhook-–∑–∞–ø—Ä–æ—Å–æ–≤
app = Flask(__name__)

# –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å–æ —Å—Ç–∞—Ç–∏–∫–æ–π (–∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ –∏ –≥–∏—Ñ–∫–∞–º–∏)
BASE_DIR = Path(__file__).parent
STATIC_DIR = BASE_DIR / "static"

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–º—Ç–æ–≤ –∏–∑ prompts.json
with open(BASE_DIR / "prompts.json", encoding="utf-8") as f:
    PROMPTS: Dict[str, str] = json.load(f)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_image_index: Dict[int, int] = {}  # –∫–ª—é—á: user_id, –∑–Ω–∞—á–µ–Ω–∏–µ: –∏–Ω–¥–µ–∫—Å –≤ —Å–ø–∏—Å–∫–µ –∫–∞—Ä—Ç–∏–Ω–æ–∫ (0-based) :contentReference[oaicite:8]{index=8}

# –°–ø–∏—Å–æ–∫ –∏–º—ë–Ω —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫ (—Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ PNG)
IMAGE_FILES = [fname for fname in sorted(os.listdir(STATIC_DIR)) if fname.endswith(".png")]

# ------------------------------
# 2. –•–µ–Ω–¥–ª–µ—Ä /start
# ------------------------------
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç:
    1) –°—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ YouTube
    2) –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ OVERLORD AI INK (Free Train)
    3) GIF —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ Google Colab
    4) Inline-–∫–Ω–æ–ø–∫—É '–ø—Ä–∏–º–µ—Ä –ø—Ä–æ–º—Ç–∞'
    """
    chat_id = update.effective_chat.id

    # 2.1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º YouTube —Å—Å—ã–ª–∫—É
    youtube_link = "https://www.youtube.com/watch?v=J4qY9DYE184"
    await context.bot.send_message(chat_id=chat_id,
                                   text=f"üîó –°–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ:\n{youtube_link}")  # :contentReference[oaicite:9]{index=9}

    # 2.2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ Free Train
    free_train_text = (
        "OVERLORD AI INK (Free Train)\n\n"
        "–≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –≤–∞—à–∏—Ö –º–æ–¥–µ–ª–µ–π –≤ Stable Diffusion. "
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞—Ä–∞–Ω–µ–µ –∑–∞–¥–∞–Ω–Ω—ã—Ö LoRA, "
        "–∞ —Ç–∞–∫–∂–µ –∏–∑–º–µ–Ω—è—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞—à–µ–π –º–æ–¥–µ–ª–∏. –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ "
        "–æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é '–ø—Ä–∏–º–µ—Ä –ø—Ä–æ–º—Ç–∞' –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–∏–∂–µ.\n"
    )
    await context.bot.send_message(chat_id=chat_id, text=free_train_text)  # :contentReference[oaicite:10]{index=10}

    # 2.3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GIF (14.gif) –≤–º–µ—Å—Ç–µ —Å–æ —Å—Å—ã–ª–∫–æ–π –Ω–∞ Google Colab
    # –ü—Ä–∏–º–µ—Ä —Å—Å—ã–ª–∫–∏ –Ω–∞ Colab (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å)
    colab_link = "https://colab.research.google.com/your_colab_link"
    gif_path = STATIC_DIR / "14.gif"
    if gif_path.exists():
        await context.bot.send_animation(chat_id=chat_id,
                                         animation=InputFile(gif_path),
                                         caption=f"üíª –ó–∞–ø—É—Å—Ç–∏—Ç–µ Colab: {colab_link}")  # :contentReference[oaicite:11]{index=11}
    else:
        await context.bot.send_message(chat_id=chat_id,
                                       text="‚ö†Ô∏è GIF –Ω–µ –Ω–∞–π–¥–µ–Ω.")  # :contentReference[oaicite:12]{index=12}

    # 2.4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É '–ø—Ä–∏–º–µ—Ä –ø—Ä–æ–º—Ç–∞' –∏ '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
    keyboard = [
        [InlineKeyboardButton("üì∑ –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–º—Ç–∞", callback_data="show_prompt")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await context.bot.send_message(chat_id=chat_id,
                                   text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                                   reply_markup=reply_markup)  # :contentReference[oaicite:13]{index=13}

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç–∏–Ω–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_image_index[chat_id] = 0  # :contentReference[oaicite:14]{index=14}

# ------------------------------
# 3. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
# ------------------------------
async def callback_query_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ Inline-–∫–Ω–æ–ø–∫–∏.
    –í–æ–∑–º–æ–∂–Ω—ã–µ callback_data:
    - 'show_prompt'         : –ø–æ–∫–∞–∑–∞—Ç—å –æ—á–µ—Ä–µ–¥–Ω–æ–π –ø—Ä–∏–º–µ—Ä –ø—Ä–æ–º—Ç–∞
    - 'main_menu'           : –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (Free Train)
    - 'menu_free'           : –ø–æ–∫–∞–∑–∞—Ç—å Free Train (–∞–Ω–∞–ª–æ–≥ /start)
    - 'menu_pro'            : –ø–æ–∫–∞–∑–∞—Ç—å PRO-–≤–µ—Ä—Å–∏—é –∏ –ø–æ–¥–ø–∏—Å–∫–∏
    - 'sub_month' / 'sub_forever' : –ø–æ–¥–ø–∏—Å–∫–∏ —á–µ—Ä–µ–∑ Tribut
    """
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat.id
    data = query.data

    # 3.1. –ù–∞–∂–∞—Ç–∏–µ 'show_prompt' ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É+–ø—Ä–æ–º—Ç
    if data == "show_prompt":
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        idx = user_image_index.get(chat_id, 0)
        filename = IMAGE_FILES[idx]
        prompt_text = PROMPTS.get(filename, "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        image_path = STATIC_DIR / filename

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ —Ç–µ–∫—Å—Ç –ø—Ä–æ–º—Ç–∞
        if image_path.exists():
            await context.bot.send_photo(chat_id=chat_id,
                                         photo=InputFile(image_path),
                                         caption=f"üí° –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–º—Ç–∞ –¥–ª—è {filename}:\n{prompt_text}")  # :contentReference[oaicite:15]{index=15}
        else:
            await context.bot.send_message(chat_id=chat_id,
                                           text=f"‚ö†Ô∏è –§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω.")  # :contentReference[oaicite:16]{index=16}

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å (–ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É, –µ—Å–ª–∏ –∫–æ–Ω–µ—Ü ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ 0)
        next_idx = (idx + 1) % len(IMAGE_FILES)
        user_image_index[chat_id] = next_idx  # :contentReference[oaicite:17]{index=17}

        # –°–Ω–æ–≤–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏: –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–º—Ç–∞ –∏ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = [
            [InlineKeyboardButton("üì∑ –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–º—Ç–∞", callback_data="show_prompt")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await context.bot.send_message(chat_id=chat_id,
                                       text="–ß—Ç–æ –¥–∞–ª—å—à–µ?",
                                       reply_markup=reply_markup)  # :contentReference[oaicite:18]{index=18}

    # 3.2. –ù–∞–∂–∞—Ç–∏–µ 'main_menu' ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–Ω–æ–≤–æ Free Train (–∞–Ω–∞–ª–æ–≥ /start)
    elif data == "main_menu" or data == "menu_free":
        # –í—ã–∑—ã–≤–∞–µ–º –ª–æ–≥–∏–∫—É –∏–∑ start_command
        # –ó–¥–µ—Å—å –ø—Ä–æ—â–µ –Ω–∞–ø—Ä—è–º—É—é –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É start
        await start_command(update, context)  # :contentReference[oaicite:19]{index=19}

    # 3.3. –ù–∞–∂–∞—Ç–∏–µ 'menu_pro' ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å PRO-–≤–µ—Ä—Å–∏—é –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–∞—Ö
    elif data == "menu_pro":
        pro_text = (
            "üíº –ü–æ–ª–Ω–∞—è –í–µ—Ä—Å–∏—è OVERLORD AI INK PRO\n\n"
            "–í PRO-–≤–µ—Ä—Å–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã:\n"
            "‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –º–æ–¥–µ–ª–µ–π Stable Diffusion\n"
            "‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö LoRA –∏ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å—Ç–∏–ª–µ–π\n"
            "‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É —á–µ—Ä–µ–∑ Tribut:"
        )
        await context.bot.send_message(chat_id=chat_id, text=pro_text)  # :contentReference[oaicite:20]{index=20}

        # –ö–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ —á–µ—Ä–µ–∑ Tribut
        tribut_link = "https://t.me/TributeBot?start=overlord_ai_ink"  # –ø—Ä–∏–º–µ—Ä —Å—Å—ã–ª–∫–∏
        keyboard = [
            [InlineKeyboardButton("1 –º–µ—Å—è—Ü ‚Äì 2990‚ÇΩ", url=tribut_link + "_month")],
            [InlineKeyboardButton("–ù–∞–≤—Å–µ–≥–¥–∞ ‚Äì 11990‚ÇΩ", url=tribut_link + "_forever")],
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await context.bot.send_message(chat_id=chat_id,
                                       text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:",
                                       reply_markup=reply_markup)  # :contentReference[oaicite:21]{index=21}

    # 3.4. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö callback‚Äô–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫ (–∫ –ø—Ä–∏–º–µ—Ä—É, –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ)
    elif data in ("sub_month", "sub_forever"):
        if data == "sub_month":
            await context.bot.send_message(chat_id=chat_id,
                                           text="–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É 1 –º–µ—Å—è—Ü ‚Äì 2990‚ÇΩ.\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã.")  # :contentReference[oaicite:22]{index=22}
        else:
            await context.bot.send_message(chat_id=chat_id,
                                           text="–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–≤—Å–µ–≥–¥–∞ ‚Äì 11990‚ÇΩ.\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã.")  # :contentReference[oaicite:23]{index=23}

    else:
        # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
        await context.bot.send_message(chat_id=chat_id,
                                       text="‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é.")  # :contentReference[oaicite:24]{index=24}

# ------------------------------
# 4. –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ)
# ------------------------------
async def set_webhook(app_context):
    """
    –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook Telegram –Ω–∞ –∞–¥—Ä–µ—Å RENDER_EXTERNAL_URL/webhook
    """
    bot = Bot(token=TELEGRAM_TOKEN)
    webhook_url = f"{RENDER_EXTERNAL_URL}/webhook"
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    await bot.set_webhook(webhook_url)  # :contentReference[oaicite:25]{index=25}

# ------------------------------
# 5. Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook-–∑–∞–ø—Ä–æ—Å–æ–≤
# ------------------------------
@app.route("/webhook", methods=["POST", "GET"])
def webhook():
    """
    –ü—Ä–∏—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å –∏–∑ Telegram (update) –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è —Å—é–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.
    –ú—ã –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –≤ Update –∏ –ø–µ—Ä–µ–¥–∞—ë–º –≤ dispatcher.
    """
    from telegram import Update
    from telegram.ext import Dispatcher

    # –°–æ–∑–¥–∞—ë–º ApplicationBuilder –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ update –≤–Ω—É—Ç—Ä–∏ Flask (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
    application = app.config["bot_app"]

    if request.method == "POST":
        update = Update.de_json(request.get_json(force=True), application.bot)
        application.update_queue.put(update)
        return "OK", 200
    else:
        return "Hello, this is OVERLORD AI INK bot!", 200

# ------------------------------
# 6. –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–∞ Render
# ------------------------------
if __name__ == "__main__":
    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (Application) –¥–ª—è python-telegram-bot —Å –∑–∞–ø—É—Å–∫–æ–º webhook
    application = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º Application –≤ –∫–æ–Ω—Ñ–∏–≥ Flask, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –¥–æ—Å—Ç—É—á–∞—Ç—å—Å—è –≤ webhook()
    app.config["bot_app"] = application

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã
    application.add_handler(CommandHandler("start", start_command))  # :contentReference[oaicite:26]{index=26}
    application.add_handler(CallbackQueryHandler(callback_query_handler))  # :contentReference[oaicite:27]{index=27}

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    # –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook —Ç—Ä–µ–±—É–µ—Ç—Å—è asyncio-—Ü–∏–∫–ª,
    # –ø–æ—ç—Ç–æ–º—É –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º run_once –≤ –∫–æ—Ä—É—Ç–∏–Ω–µ.
    application.run_webhook(
        listen="0.0.0.0",
        port=int(os.environ.get("PORT", "8443")),
        webhook_url=f"{RENDER_EXTERNAL_URL}/webhook",
    )  # :contentReference[oaicite:28]{index=28}
